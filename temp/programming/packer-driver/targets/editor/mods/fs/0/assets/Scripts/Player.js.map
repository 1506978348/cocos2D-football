{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/FootballStar%20copy/assets/Scripts/Player.ts"],"names":["_decorator","Component","Vec3","ccclass","property","Player","start","originalPos","node","position","x","y","z","update","deltaTime","startToJump","curJumpTime","jumpTime","targetPos","JumpEnd","currentPos","jumpSpeed","isLanding","curLandTime","landTime","isJumping","scheduleOnce","Jump","height","add"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;wBAGjBK,M,WADZF,OAAO,CAAC,QAAD,C,yBAAR,MACaE,MADb,SAC4BJ,SAD5B,CACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,wCAMnB,GANmB;;AAAA,6CAOR,IAAIC,IAAJ,EAPQ;;AAAA,+CAQJ,CARI;;AAAA,4CASP,GATO;;AAAA,6CAUN,IAVM;;AAAA;;AAAA;;AAAA,4CAgBP,GAhBO;;AAAA,+CAiBJ,CAjBI;AAAA;;AAkBlC;AAGAI,QAAAA,KAAK,GAAI;AACL,eAAKC,WAAL,GAAmB,IAAIL,IAAJ,CAAU,KAAKM,IAAL,CAAUC,QAAV,CAAmBC,CAA7B,EAAgC,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAnD,EAAsD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAzE,CAAnB;AACH;;AAEDC,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AAEvB;AACA,cAAI,KAAKC,WAAT,EACA;AACI,iBAAKC,WAAL,IAAoBF,SAApB;;AACA,gBAAI,KAAKE,WAAL,GAAmB,KAAKC,QAA5B,EACA;AACI;AACA,mBAAKT,IAAL,CAAUC,QAAV,GAAqB,KAAKS,SAA1B;AACA,mBAAKH,WAAL,GAAmB,KAAnB;AACA,mBAAKI,OAAL;AACH,aAND,MAQA;AACI;AACA,mBAAKC,UAAL,CAAgBT,CAAhB,IAAqB,KAAKU,SAAL,GAAiBP,SAAtC;AACA,mBAAKN,IAAL,CAAUC,QAAV,GAAqB,KAAKW,UAA1B;AACH;AACJ,WAnBsB,CAqBvB;;;AACA,cAAI,KAAKE,SAAT,EACA;AACI,iBAAKC,WAAL,IAAoBT,SAApB;;AACA,gBAAI,KAAKS,WAAL,GAAmB,KAAKC,QAA5B,EACA;AACI,mBAAKhB,IAAL,CAAUC,QAAV,GAAqB,KAAKF,WAA1B;AACA,mBAAKgB,WAAL,GAAmB,CAAnB;AACH;AACJ;AACJ;;AAEDJ,QAAAA,OAAO,GACP;AACI,eAAKM,SAAL,GAAiB,KAAjB;AAEA,eAAKC,YAAL,CAAkB,YAAW;AACzB,iBAAKJ,SAAL,GAAiB,IAAjB;AACH,WAFD,EAEG,IAFH;AAGH;;AAEDK,QAAAA,IAAI,CAACC,MAAD,EACJ;AACI,cAAI,KAAKH,SAAT,EAAoB;AAAE;AAAS,WADnC,CAGI;;;AACA,eAAKT,WAAL,GAAmB,CAAnB,CAJJ,CAMI;;AACA,eAAKI,UAAL,GAAkB,IAAIlB,IAAJ,CAAU,KAAKM,IAAL,CAAUC,QAAV,CAAmBC,CAA7B,EAAgC,KAAKF,IAAL,CAAUC,QAAV,CAAmBE,CAAnD,EAAsD,KAAKH,IAAL,CAAUC,QAAV,CAAmBG,CAAzE,CAAlB;AACAV,UAAAA,IAAI,CAAC2B,GAAL,CAAS,KAAKX,SAAd,EAAyB,KAAKE,UAA9B,EAA0C,IAAIlB,IAAJ,CAAS,CAAT,EAAY0B,MAAZ,EAAoB,CAApB,CAA1C;AAEA,eAAKb,WAAL,GAAmB,IAAnB;AACA,eAAKU,SAAL,GAAiB,IAAjB;AAEA,eAAKH,SAAL,GAAiB,KAAjB;AACH;;AAlFiC,O","sourcesContent":["\nimport { _decorator, Component, Node, Vec3, director, RigidBody2D, Vec2, animation, tween, debug } from 'cc';\nconst { ccclass, property } = _decorator;\n \n@ccclass('Player')\nexport class Player extends Component {\n\n    //--for jumping--//\n    private isJumping: boolean;\n    private startToJump: boolean;\n    private currentPos: Vec3;\n    private step = 100; //one block\n    private targetPos: Vec3 = new Vec3();\n    private curJumpTime: number = 0;\n    private jumpTime: number = 0.2;\n    private jumpSpeed: number = 1000\n\n    private originalPos: Vec3;\n\n    //--for landing--//\n    private isLanding: boolean;\n    private landTime: number = 0.2;\n    private curLandTime: number = 0;\n    //private curLandPos: Vec3;\n\n\n    start () {\n        this.originalPos = new Vec3 (this.node.position.x, this.node.position.y, this.node.position.z);\n    }\n\n    update (deltaTime: number) {\n\n        //jumping\n        if (this.startToJump)\n        {\n            this.curJumpTime += deltaTime;\n            if (this.curJumpTime > this.jumpTime)\n            {\n                //end\n                this.node.position = this.targetPos;\n                this.startToJump = false;\n                this.JumpEnd();\n            }\n            else\n            {\n                //tween\n                this.currentPos.y += this.jumpSpeed * deltaTime;           \n                this.node.position = this.currentPos;\n            }\n        }    \n        \n        //landing\n        if (this.isLanding)\n        {\n            this.curLandTime += deltaTime;\n            if (this.curLandTime > this.landTime)\n            {\n                this.node.position = this.originalPos;\n                this.curLandTime = 0;\n            }     \n        }\n    }\n\n    JumpEnd()\n    {\n        this.isJumping = false;\n\n        this.scheduleOnce(function() {            \n            this.isLanding = true;\n        }, 0.15);  \n    }\n\n    Jump(height: number)\n    {\n        if (this.isJumping) { return; }\n\n        //set current move time\n        this.curJumpTime = 0;\n\n        //set target position\n        this.currentPos = new Vec3 (this.node.position.x, this.node.position.y, this.node.position.z);\n        Vec3.add(this.targetPos, this.currentPos, new Vec3(0, height, 0));\n\n        this.startToJump = true;\n        this.isJumping = true;\n\n        this.isLanding = false;\n    }\n}\n"]}