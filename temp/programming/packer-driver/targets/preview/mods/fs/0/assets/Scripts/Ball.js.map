{"version":3,"sources":["file:///Users/lamngo/Desktop/Cocos/FootballStar%20copy/assets/Scripts/Ball.ts"],"names":["_decorator","Component","Vec3","director","ccclass","property","Ball","start","moveDown","isHit","ballPos","node","position","x","y","z","max","ballHit","update","deltaTime","horizontalSpeed","verticalSpeed","playerX","loadScene","_hitSpeedX","_hitSpeedY","width","Math","random"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Vec2, Prefab, Vec3, Contact2DType, Collider2D, CircleCollider2D, systemEvent, SystemEventType, director, IPhysics2DContact, EventMouse } from 'cc';\r\nimport { Crosshair } from './Crosshair';\r\nconst { ccclass, property } = _decorator;\r\n\r\n \r\n@ccclass('Ball')\r\nexport class Ball extends Component {\r\n    \r\n    private moveDown: boolean;\r\n    private isHit: boolean;\r\n\r\n    @property\r\n    horizontalSpeed = 700;\r\n\r\n    @property\r\n    verticalSpeed = 400;\r\n\r\n    private _hitSpeedX: number = 800;\r\n    private _hitSpeedY: number = 200;\r\n\r\n    private width: number = 600;\r\n    private playerX: number = -400;\r\n\r\n    private max: number;\r\n    private ballPos: Vec3;\r\n\r\n    start () {\r\n        this.moveDown = true;\r\n        this.isHit = false;\r\n\r\n        this.ballPos = new Vec3 (this.node.position.x, this.node.position.y, this.node.position.z);\r\n        this.max = this.ballPos.y;\r\n    }\r\n\r\n    //when ball hit the crosshair\r\n    ballHit()\r\n    {\r\n        this.isHit = true;\r\n    }\r\n\r\n\r\n    update (deltaTime: number) {  \r\n        //if ball is not hit\r\n        if (this.isHit == false)     \r\n        {\r\n            //if ball falls down\r\n            if (this.moveDown == true)\r\n            {\r\n                //set speed for ball to fall down\r\n                this.ballPos.x -= this.horizontalSpeed * deltaTime;\r\n                this.ballPos.y -= this.verticalSpeed * deltaTime;\r\n                //if ball hits ground - bounce up\r\n                if (this.ballPos.y < 0)\r\n                {\r\n                    this.moveDown = false;\r\n                }\r\n                if (this.ballPos.x < this.playerX)\r\n                {\r\n                    director.loadScene(\"over\");\r\n                }\r\n                this.node.position = this.ballPos;\r\n            }\r\n\r\n            //if ball bounces up\r\n            else\r\n            {\r\n                this.ballPos.x -= this.horizontalSpeed * deltaTime;\r\n                this.ballPos.y += this.verticalSpeed * deltaTime;\r\n                //ball moves down again when hit max value\r\n                if (this.ballPos.y > this.max)\r\n                {\r\n                    this.moveDown = true;\r\n                }\r\n                if (this.ballPos.x < this.playerX)\r\n                {\r\n                    director.loadScene(\"over\");\r\n                }\r\n                this.node.position = this.ballPos;\r\n            }\r\n        }\r\n\r\n        //if ball is hit\r\n        if (this.isHit == true)\r\n        {\r\n            this.ballPos.x += this._hitSpeedX * deltaTime;\r\n            this.ballPos.y += this._hitSpeedY * deltaTime;\r\n            if (this.ballPos.x > this.width)\r\n            {\r\n                this.isHit = false;\r\n                this.ballPos.y = Math.random() * 500 + 50;\r\n            }\r\n            this.node.position = this.ballPos;\r\n            this.max = this.ballPos.y;\r\n        }\r\n        \r\n    }\r\n}\r\n"]}